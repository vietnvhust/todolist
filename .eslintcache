[{"E:\\NguyenKhong\\reactjs_tutorial\\todolist\\src\\index.js":"1","E:\\NguyenKhong\\reactjs_tutorial\\todolist\\src\\App.js":"2","E:\\NguyenKhong\\reactjs_tutorial\\todolist\\src\\components\\Fillter\\Fillter.js":"3","E:\\NguyenKhong\\reactjs_tutorial\\todolist\\src\\components\\ButtonAdd\\ButtonAdd.js":"4","E:\\NguyenKhong\\reactjs_tutorial\\todolist\\src\\components\\Add\\Add.js":"5","E:\\NguyenKhong\\reactjs_tutorial\\todolist\\src\\components\\List\\index.js":"6","E:\\NguyenKhong\\reactjs_tutorial\\todolist\\src\\components\\List\\List.js":"7","E:\\NguyenKhong\\reactjs_tutorial\\todolist\\src\\components\\Item\\Item.js":"8","E:\\NguyenKhong\\reactjs_tutorial\\todolist\\src\\custom-hook\\useDebounce.js":"9","E:\\NguyenKhong\\reactjs_tutorial\\todolist\\src\\reducers\\index.js":"10","E:\\NguyenKhong\\reactjs_tutorial\\todolist\\src\\actions\\index.js":"11","E:\\NguyenKhong\\reactjs_tutorial\\todolist\\src\\constants\\ActionTypes.js":"12","E:\\NguyenKhong\\reactjs_tutorial\\todolist\\src\\reducers\\todos.js":"13","E:\\NguyenKhong\\reactjs_tutorial\\todolist\\src\\reducers\\toogle.js":"14"},{"size":411,"mtime":1608652783885,"results":"15","hashOfConfig":"16"},{"size":4685,"mtime":1608733090758,"results":"17","hashOfConfig":"16"},{"size":2721,"mtime":1608646576726,"results":"18","hashOfConfig":"16"},{"size":658,"mtime":1608732179029,"results":"19","hashOfConfig":"16"},{"size":3030,"mtime":1608646721291,"results":"20","hashOfConfig":"16"},{"size":49,"mtime":1608159052204,"results":"21","hashOfConfig":"16"},{"size":3532,"mtime":1608679686130,"results":"22","hashOfConfig":"16"},{"size":1750,"mtime":1608679773861,"results":"23","hashOfConfig":"16"},{"size":1297,"mtime":1608646509398,"results":"24","hashOfConfig":"16"},{"size":198,"mtime":1608679532183,"results":"25","hashOfConfig":"16"},{"size":224,"mtime":1608678885261,"results":"26","hashOfConfig":"16"},{"size":443,"mtime":1608652110678,"results":"27","hashOfConfig":"16"},{"size":380,"mtime":1608678236002,"results":"28","hashOfConfig":"16"},{"size":292,"mtime":1608733112531,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1jobok3",{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\NguyenKhong\\reactjs_tutorial\\todolist\\src\\index.js",[],["62","63"],"E:\\NguyenKhong\\reactjs_tutorial\\todolist\\src\\App.js",["64","65"],"E:\\NguyenKhong\\reactjs_tutorial\\todolist\\src\\components\\Fillter\\Fillter.js",[],"E:\\NguyenKhong\\reactjs_tutorial\\todolist\\src\\components\\ButtonAdd\\ButtonAdd.js",[],"E:\\NguyenKhong\\reactjs_tutorial\\todolist\\src\\components\\Add\\Add.js",[],"E:\\NguyenKhong\\reactjs_tutorial\\todolist\\src\\components\\List\\index.js",[],"E:\\NguyenKhong\\reactjs_tutorial\\todolist\\src\\components\\List\\List.js",["66","67"],"import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Item from \"../Item/Item\";\nimport useDebounce from \"../../custom-hook/useDebounce\";\n\nfunction List(props) {\n  const { list } = props;\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchStatus, setsearchStatus] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const debouncedSearchTerm = useDebounce(searchTerm, 500);\n  useEffect(() => {\n    // Make sure we have a value (user has entered something in input)\n    if (debouncedSearchTerm) {\n      setIsSearching(true);\n      if (searchCharacters(debouncedSearchTerm)) {\n        setIsSearching(false);\n        setResults(searchCharacters(debouncedSearchTerm));\n      }\n    } else {\n      setResults(list);\n    }\n  }, [debouncedSearchTerm, list]);\n  useEffect(() => {\n    let newList = [...results];\n    if (searchStatus === \"1\") {\n      newList = newList.sort((a, b) =>\n        parseInt(a.status) > parseInt(b.status)\n          ? -1\n          : parseInt(b.status) > parseInt(a.status)\n          ? 1\n          : 0\n      );\n    } else if (searchStatus === \"0\") {\n      newList = newList.sort((a, b) =>\n        parseInt(a.status) > parseInt(b.status)\n          ? 1\n          : parseInt(b.status) > parseInt(a.status)\n          ? -1\n          : 0\n      );\n    }\n    setResults(newList);\n  }, [searchStatus]);\n\n  function searchCharacters(search) {\n    let newList = [...list];\n    if (search !== \"\") {\n      newList = props.list.filter((obj) =>\n        Object.values(obj).some((val) =>\n          val.toString().toLowerCase().includes(search.toString().toLowerCase())\n        )\n      );\n    }\n    return newList;\n  }\n  function onDelete(id) {\n    props.onDelete(id);\n  }\n  function onEdit(id) {\n    props.onEdit(id);\n  }\n  function onStatus(id) {\n    props.onStatus(id);\n  }\n  return (\n    <>\n      <div className=\"row mt-15\">\n        <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n          <table className=\"table table-bordered table-hover\">\n            <thead>\n              <tr>\n                <th className=\"text-center\">STT</th>\n                <th className=\"text-center\">Tên</th>\n                <th className=\"text-center\">Trạng Thái</th>\n                <th className=\"text-center\">Hành Động</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td></td>\n                <td>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                  />\n                  {isSearching && <div>Searching ...</div>}\n                </td>\n                <td>\n                  <select\n                    className=\"form-control\"\n                    onChange={(e) => setsearchStatus(e.target.value)}\n                  >\n                    <option value=\"-1\">Tất Cả</option>\n                    <option value=\"0\">Ẩn</option>\n                    <option value=\"1\">Kích Hoạt</option>\n                  </select>\n                </td>\n                <td></td>\n              </tr>\n              <Item\n                list={results}\n                onDelete={onDelete}\n                onEdit={onEdit}\n                onStatus={onStatus}\n              ></Item>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </>\n  );\n}\n\nItem.propTypes = {\n  list: PropTypes.array,\n};\n\nexport default List;\n","E:\\NguyenKhong\\reactjs_tutorial\\todolist\\src\\components\\Item\\Item.js",["68"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./../../actions/index\";\nfunction Item(props) {\n  function handleDeleteItem(id){\n    props.onDelete(id);\n  }\n  function handleEditItem(id) {\n    props.onEdit(id);\n  }\n  function handleChangeStatus(id) {\n    props.onStatus(id);\n  }\n  const { redux_todos } = props;\n  const elmItem = redux_todos.map((todo, index) => {\n    return (\n      <tr key={index}>\n        <td>{index + 1}</td>\n        <td>{todo.title}</td>\n        <td className=\"text-center\">\n          {todo.status === \"0\" ? (\n            <span\n              onClick={() => handleChangeStatus(todo.id)}\n              className=\"label label-success\"\n            >\n              Inactive\n            </span>\n          ) : (\n            <span\n              onClick={() => handleChangeStatus(todo.id)}\n              className=\"label label-success\"\n            >\n              Active\n            </span>\n          )}\n        </td>\n        <td className=\"text-center\">\n          <button\n            type=\"button\"\n            className=\"btn btn-warning\"\n            onClick={() => handleEditItem(todo.id)}\n          >\n            <span className=\"fa fa-pencil mr-5\"></span>Sửa\n          </button>\n          &nbsp;\n          <button\n            type=\"button\"\n            className=\"btn btn-danger\"\n            onClick={() => handleDeleteItem(todo.id)}\n          >\n            <span className=\"fa fa-trash mr-5\"></span>Xóa\n          </button>\n        </td>\n      </tr>\n    );\n  });\n  return <>{elmItem}</>;\n}\n\nItem.defaultProps = {\n  list: [],\n};\n\nItem.propTypes = {};\n\nconst mapStateToProps = (state) => {\n  return {\n    redux_todos: state.todos,\n  };\n};\nexport default connect(mapStateToProps, null)(Item);","E:\\NguyenKhong\\reactjs_tutorial\\todolist\\src\\custom-hook\\useDebounce.js",["69"],"import { useState, useEffect } from \"react\";\r\n\r\n// Our hook\r\nexport default function useDebounce(value, delay) {\r\n  // State and setters for debounced value\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(\r\n    () => {\r\n      // Set debouncedValue to value (passed in) after the specified delay\r\n      const handler = setTimeout(() => {\r\n        setDebouncedValue(value);\r\n      }, delay);\r\n\r\n      // Return a cleanup function that will be called every time ...\r\n      // ... useEffect is re-called. useEffect will only be re-called ...\r\n      // ... if value changes (see the inputs array below).\r\n      // This is how we prevent debouncedValue from changing if value is ...\r\n      // ... changed within the delay period. Timeout gets cleared and restarted.\r\n      // To put it in context, if the user is typing within our app's ...\r\n      // ... search box, we don't want the debouncedValue to update until ...\r\n      // ... they've stopped typing for more than 500ms.\r\n      return () => {\r\n        clearTimeout(handler);\r\n      };\r\n    },\r\n    // Only re-call effect if value changes\r\n    // You could also add the \"delay\" var to inputs array if you ...\r\n    // ... need to be able to change that dynamically.\r\n    [value]\r\n  );\r\n\r\n  return debouncedValue;\r\n}\r\n","E:\\NguyenKhong\\reactjs_tutorial\\todolist\\src\\reducers\\index.js",[],"E:\\NguyenKhong\\reactjs_tutorial\\todolist\\src\\actions\\index.js",[],"E:\\NguyenKhong\\reactjs_tutorial\\todolist\\src\\constants\\ActionTypes.js",[],"E:\\NguyenKhong\\reactjs_tutorial\\todolist\\src\\reducers\\todos.js",[],"E:\\NguyenKhong\\reactjs_tutorial\\todolist\\src\\reducers\\toogle.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":7,"column":13,"nodeType":"76","messageId":"77","endLine":7,"endColumn":20},{"ruleId":"78","severity":1,"message":"79","line":24,"column":12,"nodeType":"76","messageId":"80","endLine":24,"endColumn":24},{"ruleId":"81","severity":1,"message":"82","line":24,"column":6,"nodeType":"83","endLine":24,"endColumn":33,"suggestions":"84"},{"ruleId":"81","severity":1,"message":"85","line":45,"column":6,"nodeType":"83","endLine":45,"endColumn":20,"suggestions":"86"},{"ruleId":"74","severity":1,"message":"75","line":3,"column":13,"nodeType":"76","messageId":"77","endLine":3,"endColumn":20},{"ruleId":"81","severity":1,"message":"87","line":30,"column":5,"nodeType":"83","endLine":30,"endColumn":12,"suggestions":"88"},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'actions' is defined but never used.","Identifier","unusedVar","no-redeclare","'onToggleForm' is already defined.","redeclared","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchCharacters'. Either include it or remove the dependency array.","ArrayExpression",["91"],"React Hook useEffect has a missing dependency: 'results'. Either include it or remove the dependency array.",["92"],"React Hook useEffect has a missing dependency: 'delay'. Either include it or remove the dependency array.",["93"],"no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},"Update the dependencies array to be: [debouncedSearchTerm, list, searchCharacters]",{"range":"100","text":"101"},"Update the dependencies array to be: [results, searchStatus]",{"range":"102","text":"103"},"Update the dependencies array to be: [delay, value]",{"range":"104","text":"105"},[846,873],"[debouncedSearchTerm, list, searchCharacters]",[1417,1431],"[results, searchStatus]",[1251,1258],"[delay, value]"]